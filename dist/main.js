!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var t=function(){function t(e,n,o,r,i){var a=e.name,s=e.link,c=e.likes,u=e._id,l=e.owner;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._text=a,this._link=s,this._likes=c.length,this._cardId=u,this._ownerId=l._id,this._selector=n,this._element=null,this._handleCardClick=o,this._handleBinClick=r,this._handleLike=i}var n,o;return n=t,(o=[{key:"_updatePageLikes",value:function(e){e.target.classList.contains("cards__like-button_active")?e.target.classList.remove("cards__like-button_active"):e.target.classList.add("cards__like-button_active")}},{key:"_enlargePhoto",value:function(e){this._handleCardClick(e)}},{key:"_setEventListeners",value:function(){var e=this,t=this._element.querySelector(".cards__photo");this._element.querySelector(".cards__like-button").addEventListener("click",(function(t){e._handleLike(t),e._updatePageLikes(t)})),t.addEventListener("click",(function(t){return e._enlargePhoto(t)}))}},{key:"_getTemplate",value:function(){return document.querySelector("".concat(this._selector)).content.querySelector(".cards__item").cloneNode(!0)}},{key:"_getBinTemplate",value:function(){return document.querySelector("#binTemplate").content.querySelector(".cards__close-button").cloneNode(!0)}},{key:"_setBinListener",value:function(){var e=this;this._binIcon.addEventListener("click",(function(t){return e._handleBinClick(t)}))}},{key:"_addBin",value:function(){this._element.prepend(this._binIcon)}},{key:"getCard",value:function(e){this._element=this._getTemplate(),e===this._ownerId&&(this._binIcon=this._getBinTemplate(),this._setBinListener(),this._addBin()),this._setEventListeners();var t=this._element.querySelector(".cards__photo"),n=this._element.querySelector(".cards__name"),o=this._element.querySelector(".cards__like-count");return this._element.id=this._cardId,t.src=this._link,t.alt=this._text,n.textContent=this._text,o.textContent=this._likes,this._element}}])&&e(n.prototype,o),t}();function n(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var o=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formSelector=t.formSelector,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._form=n,this._submit=this._form.querySelector(this._submitButtonSelector)}var t,o;return t=e,(o=[{key:"_disableButton",value:function(){this._submit.classList.add(this._inactiveButtonClass),this._submit.setAttribute("disabled",!0)}},{key:"_toggleButton",value:function(){this._allInputs.every((function(e){return!0===e.validity.valid}))?(this._submit.classList.remove(this._inactiveButtonClass),this._submit.removeAttribute("disabled",!1)):this._disableButton()}},{key:"_showError",value:function(e){var t=this._form.querySelector("#".concat(e.id,"-error")),n=e.validationMessage;e.classList.add(this._inputErrorClass),t.textContent=n,t.classList.add(this._errorClass)}},{key:"_hideError",value:function(e){var t=this._form.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}},{key:"_checkValidity",value:function(e){e.validity.valid?this._hideError(e):this._showError(e)}},{key:"_setListeners",value:function(e){var t=this;e.addEventListener("input",(function(){t._checkValidity(e),t._toggleButton()}))}},{key:"resetValidation",value:function(){var e=this;this._disableButton(),this._allInputs.forEach((function(t){e._hideError(t)}))}},{key:"enableValidation",value:function(){var e=this;this._allInputs=Array.from(this._form.querySelectorAll(this._inputSelector)),this._allInputs.forEach((function(t){e._setListeners(t)}))}}])&&n(t.prototype,o),e}();function r(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var i=function(){function e(t,n){var o=t.items,r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=o,this._renderer=r,this._container=document.querySelector("".concat(n))}var t,n;return t=e,(n=[{key:"renderElements",value:function(){var e=this;this._items.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&r(t.prototype,n),e}();function a(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var s=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_active"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_active"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("click",(function(t){(t.target.classList.contains("popup__close")||t.target.classList.contains("popup_active"))&&e.close()}))}}])&&a(t.prototype,n),e}();function c(e){return(c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function u(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function l(e,t,n){return(l="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=p(e)););return e}(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(n):r.value}})(e,t,n||e)}function f(e,t){return(f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function h(e,t){if(t&&("object"===c(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function p(e){return(p=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var d=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&f(e,t)}(a,e);var t,n,o,r,i=(o=a,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=p(o);if(r){var n=p(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return h(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._imgElement=t._popup.querySelector(".popup__image"),t._imgCaption=t._popup.querySelector(".popup__caption"),t}return t=a,(n=[{key:"open",value:function(e){var t=e.link,n=e.name;this._imgElement.src=t,this._imgElement.alt=n,this._imgCaption.textContent=n,l(p(a.prototype),"open",this).call(this)}}])&&u(t.prototype,n),a}(s);function _(e){return(_="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function v(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function y(e,t,n){return(y="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=g(e)););return e}(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(n):r.value}})(e,t,n||e)}function m(e,t){return(m=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function b(e,t){if(t&&("object"===_(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function g(e){return(g=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var k=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&m(e,t)}(a,e);var t,n,o,r,i=(o=a,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=g(o);if(r){var n=g(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return b(this,e)});function a(e,t){var n,o=e.formSelector,r=e.formSubmission;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t))._form=n._popup.querySelector(o),n._handleFormSubmission=r,n._inputList=n._form.querySelectorAll(".popup__input"),n._btn=n._form.querySelector(".popup__submit"),n._originalMsg=n._btn.textContent,n}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){return e._formValues[t.name]=t.value})),this._formValues}},{key:"setInputs",value:function(e){this._inputList.forEach((function(t){t.value=e[t.name]}))}},{key:"saveMessage",value:function(e){this._btn.textContent=e?"Saving...":this._originalMsg}},{key:"setEventListeners",value:function(){var e=this;this._submitFunction=function(t){e.saveMessage(!0),t.preventDefault(),e._handleFormSubmission(e._getInputValues())},y(g(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",this._submitFunction)}},{key:"close",value:function(){this._form.reset(),y(g(a.prototype),"close",this).call(this)}}])&&v(t.prototype,n),a}(s);function S(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var E=function(){function e(t){var n=t.nameSelector,o=t.aboutSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._about=document.querySelector(o),this._profile=null}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return this._profile={name:this._name.textContent,about:this._about.textContent},this._profile}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about;this._name.textContent=t,this._about.textContent=n}}])&&S(t.prototype,n),e}();function C(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var w=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t.baseUrl,this._auth=t.headers.authorization,this._headers=t.headers}var t,n;return t=e,(n=[{key:"_handleResponse",value:function(e){return e.ok?e.json():Promise.reject()}},{key:"getUserInfo",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/users/me"),{headers:{authorization:this._auth}}).then((function(t){return e._handleResponse(t)}))}},{key:"getCards",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/cards"),{headers:{authorization:this._auth}}).then((function(t){return e._handleResponse(t)}))}},{key:"updateProfile",value:function(e){var t=this,n=e.name,o=e.about;return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:{authorization:this._auth,"Content-Type":"application/json"},body:JSON.stringify({name:n,about:o})}).then((function(e){return t._handleResponse(e)}))}},{key:"addCard",value:function(e,t){var n=this;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:{authorization:this._auth,"Content-Type":"application/json"},body:JSON.stringify({name:e,link:t})}).then((function(e){return n._handleResponse(e)}))}},{key:"deleteCard",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:{authorization:this._auth}}).then((function(e){return t._handleResponse(e)}))}},{key:"addLike",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:{authorization:this._auth}}).then((function(e){return t._handleResponse(e)}))}},{key:"removeLike",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:{authorization:this._auth}}).then((function(e){return t._handleResponse(e)}))}},{key:"updateProfilePic",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:{authorization:this._auth,"Content-Type":"application/json"},body:JSON.stringify({avatar:e})}).then((function(e){return t._handleResponse(e)}))}}])&&C(t.prototype,n),e}(),L=document.querySelector("#profile-popup"),P=document.querySelector("#place-popup"),O=document.querySelector("#profile-pic"),j=document.querySelector(".profile__add-button"),T=document.querySelector(".profile__edit-button"),q=document.querySelector(".profile__avatar-btn"),I=document.querySelector(".profile__avatar"),R={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__submit",inactiveButtonClass:"popup__submit_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},B=null,U=null,x=null,V=function(e,n,o,r,i){return new t(e,n,o,r,i)},z=function(e){var t=e.target.parentElement.parentElement.parentElement,n=(e.target,e.target.nextElementSibling),o=null;e.target.classList.contains("cards__like-button_active")?ee.removeLike(t.id).then((function(e){o=e.likes.length,n.textContent=o})).catch((function(){console.log("Cannot add a like to the server")})):ee.addLike(t.id).then((function(e){o=e.likes.length,n.textContent=o})).catch((function(){console.log("Cannot remove a like from the server")}))},M=function(e){var t={name:e.target.alt,link:e.target.src};Y.open(t)},A={formSelector:"#profile-pic",formSubmission:function(e){var t=e.pic;ee.updateProfilePic(t).then((function(e){console.log("Profile pic updated on the server")})).catch((function(){console.log("Updating profile pic failed")})).finally((function(){X.saveMessage(!1),X.close()})),I.style.backgroundImage="url(".concat(t,")")}},D={formSelector:"#profile-popup",formSubmission:function(e){var t=e.name,n=e.about;Q.setUserInfo({name:t,about:n}),ee.updateProfile(Q.getUserInfo()).then((function(e){console.log("The profile has been updated.")})).catch((function(){console.log("Failed to update the profile")})).finally((function(){W.saveMessage(!1),W.close()}))}},F={formSelector:"#place-popup",formSubmission:function(e){var t=e.title,n=e.link;ee.addCard(t,n).then((function(e){var t=V(e,"#cardTemplate",M,J,z);U.addItem(t.getCard(x)),console.log("New card was added")})).catch((function(){console.log("Failed to add new card")})).finally((function(){Z.saveMessage(!1),Z.close()}))}},N={formSelector:"#confirm-form",formSubmission:function(){$.close(),ee.deleteCard(B.id).then((function(e){console.log("Card deleted from server")})).catch((function(){console.log("Card failed to delete from the server")})),B.remove()}},J=function(e){B=e.target.parentElement,$.open()},H=new o(R,L),G=new o(R,P),K=new o(R,O),Q=new E({nameSelector:".profile__name",aboutSelector:".profile__about"}),W=new k(D,"#editProfile"),X=new k(A,"#profilePicPopup"),Y=new d("#photo"),Z=new k(F,"#newPlace"),$=new k(N,"#confirmPopup"),ee=new w({baseUrl:"https://around.nomoreparties.co/v1/group-10",headers:{authorization:"2a32e80d-c23f-4ed9-9cf5-671c417d0702","Content-Type":"application/json"}});ee.getUserInfo().then((function(e){Q.setUserInfo(e),x=e._id,I.style.backgroundImage="url(".concat(e.avatar,")")})).catch((function(){console.log("User info failed to load")})),ee.getCards().then((function(e){var t={items:e,renderer:function(e){var t=V(e,"#cardTemplate",M,J,z);U.addItem(t.getCard(x))}};(U=new i(t,".cards")).renderElements()})).catch((function(){console.log("The cards failed to load")})),W.setEventListeners(),Z.setEventListeners(),Y.setEventListeners(),X.setEventListeners(),$.setEventListeners(),H.enableValidation(),G.enableValidation(),K.enableValidation(),q.addEventListener("click",(function(){K.resetValidation(),X.open()})),T.addEventListener("click",(function(){H.resetValidation(),W.setInputs(Q.getUserInfo()),W.open()})),j.addEventListener("click",(function(){G.resetValidation(),Z.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,